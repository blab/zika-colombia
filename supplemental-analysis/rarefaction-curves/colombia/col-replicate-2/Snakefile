NUM_SEQS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
TRIAL_NUM = [6, 7, 8, 9, 10]

rule all:
    input:
        auspice_tree = expand("auspice/auspice_{num_seqs}_{trial_num}/colombia-seqs-{num_seqs}-{trial_num}_tree.json", num_seqs=NUM_SEQS, trial_num=TRIAL_NUM),
        auspice_meta = expand("auspice/auspice_{num_seqs}_{trial_num}/colombia-seqs-{num_seqs}-{trial_num}_meta.json", num_seqs=NUM_SEQS, trial_num=TRIAL_NUM)

rule files:
    params:
        colombia_seqs_fasta = "data/colombia_{num_seqs}_seqs_trial_{trial_num}.fasta",
        background_seqs_fasta = "data/background_seqs_no_colombia.fasta",
        dropped_strains = "config/dropped_strains.txt",
        included_strains = "config/include_strains.txt",
        reference = "config/zika_outgroup.gb",
        colors = "config/colors.tsv",
        auspice_config = "config/auspice_config.json"

files = rules.files.params

rule concatenate_fastas:
    message: "concatenating subsampled Colombian sequences with Americas-wide background sequences."
    input:
        colombian_sequences = files.colombia_seqs_fasta,
        background_sequences = files.background_seqs_fasta
    output:
        full_fasta = "results/colombia-and-background-seqs_{num_seqs}_{trial_num}.fasta"
    shell:
        """
        cat {input.colombian_sequences} {input.background_sequences} > {output.full_fasta}
        """

rule parse:
    message: "Parsing fasta into separate sequences and metadata files"
    input:
        sequences = rules.concatenate_fastas.output.full_fasta
    output:
        sequences = "results/sequences_{num_seqs}_{trial_num}.fasta",
        metadata = "results/metadata_{num_seqs}_{trial_num}.tsv"
    params:
        fasta_fields = "strain virus accession date region country division city db segment authors url title journal paper_url"
    shell:
        """
        augur parse \
            --sequences {input.sequences} \
            --output-sequences {output.sequences} \
            --output-metadata {output.metadata} \
            --fields {params.fasta_fields}
        """

rule filter:
    message:
        """
        Filtering to
          - {params.sequences_per_group} sequence(s) per {params.group_by!s}
          - from {params.min_date} onwards
          - excluding strains in {input.exclude}
        """
    input:
        sequences = rules.parse.output.sequences,
        metadata = rules.parse.output.metadata,
        exclude = files.dropped_strains
    output:
        sequences = "results/filtered_{num_seqs}_{trial_num}.fasta"
    params:
        group_by = "country year month",
        sequences_per_group = 500,
        min_date = 2013
    shell:
        """
        augur filter \
            --sequences {input.sequences} \
            --metadata {input.metadata} \
            --exclude {input.exclude} \
            --output {output.sequences} \
            --group-by {params.group_by} \
            --sequences-per-group {params.sequences_per_group} \
            --min-date {params.min_date}
        """

rule align:
    message:
        """
        Aligning sequences to {input.reference}
          - filling gaps with N
        """
    input:
        sequences = rules.filter.output.sequences,
        reference = files.reference
    output:
        alignment = "results/aligned_{num_seqs}_{trial_num}.fasta"
    shell:
        """
        augur align \
            --sequences {input.sequences} \
            --reference-sequence {input.reference} \
            --output {output.alignment} \
            --fill-gaps
        """

rule tree:
    message: "Building maximum likelihood tree"
    input:
        alignment = rules.align.output.alignment
    output:
        tree = "results/tree-raw_{num_seqs}_{trial_num}.nwk"
    shell:
        """
        augur tree \
            --alignment {input.alignment} \
            --output {output.tree}
        """

rule refine:
    message:
        """
        Refining tree
          - estimate timetree
          - use {params.coalescent} coalescent timescale
          - estimate {params.date_inference} node dates
          - filter tips more than {params.clock_filter_iqd} IQDs from clock expectation
        """
    input:
        tree = rules.tree.output.tree,
        alignment = rules.align.output,
        metadata = rules.parse.output.metadata
    output:
        tree = "results/tree_{num_seqs}_{trial_num}.nwk",
        node_data = "results/branch-lengths_{num_seqs}_{trial_num}.json"
    params:
        coalescent = "opt",
        date_inference = "marginal",
        clock_filter_iqd = 4,
        root = "1_0049_PF"
    shell:
        """
        augur refine \
            --tree {input.tree} \
            --alignment {input.alignment} \
            --metadata {input.metadata} \
            --output-tree {output.tree} \
            --output-node-data {output.node_data} \
            --timetree \
            --coalescent {params.coalescent} \
            --date-confidence \
            --date-inference {params.date_inference} \
            --clock-filter-iqd {params.clock_filter_iqd} \
            --root {params.root}
        """

rule traits:
    message: "Inferring ancestral traits for {params.columns!s}"
    input:
        tree = rules.refine.output.tree,
        metadata = rules.parse.output.metadata
    output:
        node_data = "results/traits_{num_seqs}_{trial_num}.json",
    params:
        columns = "region country"
    shell:
        """
        augur traits \
            --tree {input.tree} \
            --metadata {input.metadata} \
            --output {output.node_data} \
            --columns {params.columns} \
            --confidence
        """

rule export:
    message: "Exporting data files for for auspice"
    input:
        tree = rules.refine.output.tree,
        metadata = rules.parse.output.metadata,
        branch_lengths = rules.refine.output.node_data,
        traits = rules.traits.output.node_data,
        colors = files.colors,
        auspice_config = files.auspice_config
    output:
        auspice_tree = "auspice/auspice_{num_seqs}_{trial_num}/colombia-seqs-{num_seqs}-{trial_num}_tree.json",
        auspice_meta = "auspice/auspice_{num_seqs}_{trial_num}/colombia-seqs-{num_seqs}-{trial_num}_meta.json"
    shell:
        """
        augur export \
            --tree {input.tree} \
            --metadata {input.metadata} \
            --node-data {input.branch_lengths} {input.traits} \
            --colors {input.colors} \
            --auspice-config {input.auspice_config} \
            --output-tree {output.auspice_tree} \
            --output-meta {output.auspice_meta}
        """
